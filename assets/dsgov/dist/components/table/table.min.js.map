{"version":3,"file":"components/table/table.min.js","mappings":"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","sources":["webpack://dsgov/webpack/universalModuleDefinition","webpack://dsgov/./src/components/table/table.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dsgov\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dsgov\"] = factory();\n\telse\n\t\troot[\"dsgov\"] = factory();\n})(self, function() {\nreturn ","import Collapse from '../../partial/js/behavior/collapse'\nimport Dropdown from '../../partial/js/behavior/dropdown'\n\n/* eslint-disable complexity */\nclass BRTable {\n  constructor(name, component, sequence) {\n    this.name = name\n    this.component = component\n    this._header = this.component.querySelector('.header, .table-header')\n    this._table = this.component.querySelector('table')\n    this._sequence = sequence\n    this._setBehaviors()\n  }\n\n  _setBehaviors() {\n    this._makeResponsiveTable()\n    this._headerBehavior()\n    this._setHeaderWidth()\n    this._searchBehavior()\n    this._dropdownBehavior()\n    this._collpaseBehavior()\n    this._densityBehavior()\n    this._setClickActions()\n    this._getBRHeaderHeight()\n  }\n\n  _getBRHeaderHeight() {\n    const BRHeader = document.querySelector('.br-header')\n    if (BRHeader) {\n      window.addEventListener('scroll', () => {\n        this._header.style.top = `${BRHeader.clientHeight}px`\n      })\n    }\n  }\n\n  _makeResponsiveTable() {\n    const responsiveClass = 'responsive'\n    if (!this.component.querySelector(`.${responsiveClass}`)) {\n      const responsiveElement = document.createElement('div')\n      responsiveElement.classList.add(responsiveClass)\n      responsiveElement.appendChild(this._table)\n      this._header.after(responsiveElement)\n    }\n  }\n\n  _headerBehavior() {\n    // this._hideThead()\n\n    window.addEventListener('resize', () => {\n      // this._hideThead()\n    })\n\n    for (const responsive of this.component.querySelectorAll('.responsive')) {\n      if (window.innerWidth > 575) {\n        // this._setSyncScroll(responsive)\n      }\n    }\n\n    // this._cloneHeaders()\n  }\n\n  _makeScroller() {\n    const scrollerTag = document.createElement('div')\n    // this._setSyncScroll(scrollerTag)\n    scrollerTag.classList.add('scroller')\n    for (const header of this._table.querySelectorAll('thead tr th')) {\n      const clonedHeader = document.createElement('div')\n      clonedHeader.classList.add('item')\n      clonedHeader.innerHTML = header.innerHTML\n      if (header.offsetWidth) {\n        clonedHeader.style.flex = `1 0 ${header.offsetWidth}px`\n      }\n      scrollerTag.appendChild(clonedHeader)\n      const checkbox = clonedHeader.querySelector('.br-checkbox')\n      if (checkbox) {\n        const input = checkbox.querySelector('input')\n        const label = checkbox.querySelector('label')\n        input.id = `${input.id}-clone`\n        label.setAttribute('for', input.id)\n      }\n    }\n    return scrollerTag\n  }\n\n  _cloneHeaders() {\n    const headersTag = document.createElement('div')\n    headersTag.classList.add('headers')\n    headersTag.style.top = `${this._header.offsetHeight}px`\n    headersTag.appendChild(this._makeScroller())\n    this._header.after(headersTag)\n  }\n\n  _hideThead() {\n    this._table.style.marginTop = `-${\n      this._table.querySelector('thead').offsetHeight\n    }px`\n  }\n\n  _setSyncScroll(element) {\n    element.classList.add('syncscroll')\n    element.setAttribute('name', `table-${this._sequence}`)\n    element.setAttribute('style', 'overflow-y: hidden')\n    // element.setAttribute('tabindex', 0)\n  }\n\n  _setHeaderWidth() {\n    for (const clonedHeader of this.component.querySelectorAll(\n      '.headers > div'\n    )) {\n      for (const [index, header] of this.component\n        .querySelectorAll('table thead tr th')\n        .entries()) {\n        clonedHeader.children[index].style.flex = `1 0 ${header.offsetWidth}px`\n      }\n    }\n  }\n  _dropdownBehavior() {\n    this.component\n      .querySelectorAll('[data-toggle=\"dropdown\"]')\n      .forEach((trigger) => {\n        const config = {\n          trigger,\n          iconToShow: 'fa-chevron-down',\n          iconToHide: 'fa-chevron-up',\n          useIcons: true,\n        }\n        const dropdown = new Dropdown(config)\n        dropdown.setBehavior()\n      })\n  }\n\n  _collpaseBehavior() {\n    this.component\n      .querySelectorAll('[data-toggle=\"collapse\"]')\n      .forEach((trigger) => {\n        const config = {\n          trigger,\n          iconToShow: 'fa-chevron-down',\n          iconToHide: 'fa-chevron-up',\n          useIcons: true,\n        }\n        const collapse = new Collapse(config)\n        collapse.setBehavior()\n      })\n  }\n\n  _searchBehavior() {\n    if (this.component.dataset.search) {\n      const trigger = this.component.querySelector('[data-toggle=\"search\"]')\n      const target = this.component.querySelector('.search-bar')\n      const dismiss = this.component.querySelector('[data-dismiss=\"search\"]')\n\n      // Inicializar\n      this._searchInit(trigger)\n\n      // Abre busca\n      trigger.addEventListener('click', () => {\n        return this._searchOpen(trigger, target)\n      })\n\n      // Fecha busca\n      dismiss.addEventListener('click', () => {\n        return this._searchClose(trigger, target)\n      })\n      target.querySelector('input').addEventListener('keydown', (event) => {\n        if (event.key === 'Escape') {\n          this._searchClose(trigger, target)\n        }\n      })\n    }\n  }\n\n  _searchInit(trigger) {\n    trigger.setAttribute('aria-expanded', 'false')\n  }\n\n  _searchOpen(trigger, target) {\n    trigger.setAttribute('aria-expanded', 'true')\n    target.classList.add('show')\n    target.parentElement.classList.add('show')\n    target.querySelector('input').focus()\n  }\n\n  _searchClose(trigger, target) {\n    target.querySelector('input').value = ''\n    target.classList.remove('show')\n    target.parentElement.classList.remove('show')\n    trigger.focus()\n    trigger.setAttribute('aria-expanded', 'false')\n  }\n\n  _densityBehavior() {\n    const desityTriggers = this.component.querySelectorAll('[data-density]')\n    for (const desityTrigger of desityTriggers) {\n      desityTrigger.addEventListener('click', () => {\n        this.component.classList.remove('small', 'medium', 'large')\n        this.component.classList.add(desityTrigger.dataset.density)\n        // this._hideThead()\n        this._dropdownClose(\n          desityTrigger\n            .closest('.dropdown')\n            .querySelector('[data-toggle=\"dropdown\"]')\n        )\n      })\n    }\n  }\n\n  _setClickActions() {\n    const headerCheckbox = this.component.querySelector(\n      '.headers [type=\"checkbox\"]'\n    )\n    const tableCheckboxes = this.component.querySelectorAll(\n      'tbody [type=\"checkbox\"]'\n    )\n    const selectedBar = this.component.querySelector('.selected-bar')\n    const checkAlls = this.component.querySelectorAll(\n      '[data-toggle=\"check-all\"]'\n    )\n    for (const checkAll of checkAlls) {\n      checkAll.addEventListener('click', () => {\n        this._checkAllTable(selectedBar, tableCheckboxes, headerCheckbox)\n        if (checkAll.parentElement.classList.contains('br-list')) {\n          this._dropdownClose(\n            checkAll\n              .closest('.dropdown')\n              .querySelector('[data-toggle=\"dropdown\"]')\n          )\n        }\n      })\n    }\n    if (tableCheckboxes) {\n      for (const checkbox of tableCheckboxes) {\n        checkbox.addEventListener('change', () => {\n          this._checkRow(checkbox, selectedBar, tableCheckboxes, headerCheckbox)\n        })\n      }\n    }\n  }\n\n  _setRow(checkbox, check) {\n    const tr = checkbox.parentNode.parentNode.parentNode\n    if (check) {\n      tr.classList.add('is-selected')\n      checkbox.parentNode.classList.add('is-inverted')\n      checkbox.checked = true\n    } else {\n      tr.classList.remove('is-selected')\n      checkbox.parentNode.classList.remove('is-inverted')\n      checkbox.checked = false\n    }\n  }\n\n  _checkRow(checkbox, selectedBar, tableCheckboxes, headerCheckbox) {\n    const check = checkbox.checked\n    this._setRow(checkbox, check)\n    this._setSelectedBar(\n      check ? 1 : -1,\n      selectedBar,\n      tableCheckboxes,\n      headerCheckbox\n    )\n  }\n\n  _checkAllRows(tableCheckboxes) {\n    for (const checkbox of tableCheckboxes) {\n      this._setRow(checkbox, true)\n    }\n  }\n\n  _uncheckAllRows(tableCheckboxes) {\n    for (const checkbox of tableCheckboxes) {\n      this._setRow(checkbox, false)\n    }\n  }\n\n  _checkAllTable(selectedBar, tableCheckboxes, headerCheckbox) {\n    let count = tableCheckboxes.length\n    const infoCount = selectedBar.querySelector('.info .count')\n    const total = parseInt(infoCount.innerHTML, 10)\n    if (total === count) {\n      this._uncheckAllRows(tableCheckboxes)\n      count = -1 * count\n    } else {\n      this._checkAllRows(tableCheckboxes)\n    }\n    this._setSelectedBar(count, selectedBar, tableCheckboxes, headerCheckbox)\n  }\n\n  _setSelectedBar(count, selectedBar, tableCheckboxes, headerCheckbox) {\n    const infoCount = selectedBar.querySelector('.info .count')\n    const infoText = selectedBar.querySelector('.info .text')\n    const total = count < 2 ? parseInt(infoCount.innerHTML, 10) + count : count\n    if (total > 0) {\n      selectedBar.classList.add('show')\n      infoCount.innerHTML = total\n      infoText.innerHTML = total > 1 ? 'itens selecionados' : 'item selecionado'\n      if (headerCheckbox) headerCheckbox.parentNode.classList.add('is-checking')\n      if (total === tableCheckboxes.length) {\n        if (headerCheckbox) {\n          headerCheckbox.checked = true\n          headerCheckbox.parentNode.classList.remove('is-checking')\n        }\n      }\n    } else {\n      infoCount.innerHTML = 0\n      if (headerCheckbox) {\n        headerCheckbox.checked = false\n        headerCheckbox.parentNode.classList.remove('is-checking')\n      }\n      selectedBar.classList.remove('show')\n    }\n  }\n\n  /**\n   * @fileoverview syncscroll - scroll several areas simultaniously\n   * @version 0.0.3\n   *\n   * @license MIT, see http://github.com/asvd/intence\n   * @copyright 2015 asvd <heliosframework@gmail.com>\n   */\n  // static _syncscroll() {\n  //   const scroll = 'scroll'\n  //   const elems = document.getElementsByClassName(`sync${scroll}`)\n  //   const EventListener = 'EventListener'\n  //   const length = 'length'\n  //   const names = {}\n  //   // clearing existing listeners\n  //   let i, j, el, found, name\n  //   for (name in names) {\n  //     if (Object.prototype.hasOwnProperty.call(names, name)) {\n  //       for (i = 0; i < names[name][length]; i++) {\n  //         names[name][i][`remove${EventListener}`](\n  //           scroll,\n  //           names[name][i].syn,\n  //           0\n  //         )\n  //       }\n  //     }\n  //   }\n  //   // setting-up the new listeners\n  //   for (i = 0; i < elems[length]; i++) {\n  //     found = j = 0\n  //     el = elems[i]\n  //     if (!(name = el.getAttribute('name'))) {\n  //       // name attribute is not set\n  //       continue\n  //     }\n  //     el = el[`${scroll}er`] || el // needed for intence\n  //     // searching for existing entry in array of names;\n  //     // searching for the element in that entry\n  //     for (; j < (names[name] = names[name] || [])[length]; j++) {\n  //       found |= names[name][j] === el\n  //     }\n  //     if (!found) {\n  //       names[name].push(el)\n  //     }\n  //     el.eX = el.eY = 0\n  //     this._elSyn(el, name, scroll, elems, EventListener, length, names)\n  //   }\n  // }\n\n  static _elSyn(el, name, scroll, elems, EventListener, length, names) {\n    const addEventListener = `add${EventListener}`\n    const client = 'client'\n    const Height = 'Height'\n    const Left = 'Left'\n    const mathRound = Math.round\n    const Top = 'Top'\n    const Width = 'Width'\n    el[addEventListener](\n      scroll,\n      () => {\n        const otherElems = names[name]\n        let scrollX = el[scroll + Left]\n        let scrollY = el[scroll + Top]\n        const xRate = scrollX / (el[scroll + Width] - el[client + Width])\n        const yRate = scrollY / (el[scroll + Height] - el[client + Height])\n        const updateX = scrollX !== el.eX\n        const updateY = scrollY !== el.eY\n        el.eX = scrollX\n        el.eY = scrollY\n        otherElems.forEach((element) => {\n          if (element !== el) {\n            if (\n              updateX &&\n              mathRound(\n                element[scroll + Left] -\n                  (scrollX = element.eX =\n                    mathRound(\n                      xRate *\n                        (element[scroll + Width] - element[client + Width])\n                    ))\n              )\n            ) {\n              element[scroll + Left] = scrollX\n            }\n            if (\n              updateY &&\n              mathRound(\n                element[scroll + Top] -\n                  (scrollY = element.eY =\n                    mathRound(\n                      yRate *\n                        (element[scroll + Height] - element[client + Height])\n                    ))\n              )\n            ) {\n              element[scroll + Top] = scrollY\n            }\n          }\n        })\n      },\n      0\n    )\n  }\n}\n\nexport default BRTable\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRTable","constructor","name","component","sequence","this","_header","querySelector","_table","_sequence","_setBehaviors","_makeResponsiveTable","_headerBehavior","_setHeaderWidth","_searchBehavior","_dropdownBehavior","_collpaseBehavior","_densityBehavior","_setClickActions","_getBRHeaderHeight","BRHeader","document","window","addEventListener","style","top","clientHeight","responsiveClass","responsiveElement","createElement","classList","add","appendChild","after","responsive","querySelectorAll","innerWidth","_makeScroller","scrollerTag","header","clonedHeader","innerHTML","offsetWidth","flex","checkbox","input","label","id","setAttribute","_cloneHeaders","headersTag","offsetHeight","_hideThead","marginTop","_setSyncScroll","element","index","entries","children","forEach","trigger","config","dropdown","Dropdown","iconToShow","iconToHide","useIcons","setBehavior","collapse","Collapse","dataset","search","target","dismiss","_searchInit","_searchOpen","_searchClose","event","key","parentElement","focus","value","remove","desityTriggers","desityTrigger","density","_dropdownClose","closest","headerCheckbox","tableCheckboxes","selectedBar","checkAlls","checkAll","_checkAllTable","contains","_checkRow","_setRow","check","tr","parentNode","checked","_setSelectedBar","_checkAllRows","_uncheckAllRows","count","length","infoCount","total","parseInt","infoText","static","el","scroll","elems","EventListener","names","client","Height","Left","mathRound","Math","round","Top","Width","otherElems","scrollX","scrollY","xRate","yRate","updateX","eX","updateY","eY"],"sourceRoot":""}