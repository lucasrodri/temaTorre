{"version":3,"file":"components/item/item.css","mappings":"AAKA;ECKE;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;ADXF;ACaE;EACE;EACA;ADXJ;ACaI;;EAEE;EACA;ADXN;ACeE;EACE;EACA;EACA;ADbJ;AErBI;EACE;AFuBN;ACmBE;;EAEE;EACA;EACA;EACA;ADjBJ;ACoBM;;EACE;EACA;EACA;EACA;ADjBR;ACmBQ;;EACE;EACA;ADhBV;ACmBQ;;EACE;EACA;ADhBV;ACqBQ;;EACE;ADlBV;ACyBM;EACE;ADvBR;ACyBQ;EACE;ADvBV;AC6BQ;EACE;EACA;AD3BV;AC8BQ;EACE;AD5BV;AC8BU;EACE;EACA;AD5BZ;ACoCM;EACE;EACA;ADlCR;ACsCQ;EACE;EACA;ADpCV;ACuCQ;EACE;ADrCV;ACuCU;EACE;EACA;ADrCZ;AC+CI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHmFF;ACmCI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AH+FF;ACuBI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AH2GF;ACWI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHuHF;ACDI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHmIF;ACbI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AH+IF;ACzBI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AH2JF;ACrCI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHuKF;ACjDI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHmLF;AC7DI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AH+LF;ACzEI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AH2MF;ACrFI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHuNF;ACjGI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHmOF;AC7GI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AH+OF;ACzHI;EE/HF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AH2PF;AC7HE;EEvIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EFgIE;ADwIJ;ACrIE;EE5IA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EFqIE;EACA;ADgJJ;AC7IE;EElJA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHkSF;ACtJI;EEzIF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EFkII;EACA;EACA;ADiKN;AE9TI;EACE;AFgUN;AC1JM;EACE;AD4JR;;AAlUA;EACE;AAqUF;AExUI;EACE;AF0UN;;AApUA;EACE;EACA;AAuUF;AIlVE;EACE;AJoVJ;AIjVE;EAEE;EACA;EACA;EACA;AJkVJ;AEzVI;EACE;AF2VN,C","sources":["webpack://dsgov/./src/components/item/_item.scss","webpack://dsgov/./src/components/item/_mixins.scss","webpack://dsgov/./src/partial/scss/mixins/_hover.scss","webpack://dsgov/./src/partial/scss/mixins/_states.scss","webpack://dsgov/./src/partial/scss/mixins/_focus.scss"],"sourcesContent":["@use \"sass:math\";\n @import \"../../partial/scss/base\";\n \n@import \"mixins\";\n\n.#{$prefix}item {\n  @include item-configs;\n}\n\n// Item aplicado em link/botão\na.#{$prefix}item {\n  color: var(--interactive);\n  @include hover;\n}\n\nbutton.#{$prefix}item {\n  background-color: transparent;\n  color: var(--color);\n  @include focus;\n  @include hover(\"color\");\n}\n","@mixin item-configs {\n  @include item-tokens;\n  @include item-default;\n  @include item-checkbox;\n  @include item-colors;\n  @include item-states;\n  @include item-toggle;\n}\n\n@mixin item-tokens {\n  --item-font-weight: var(--font-weight);\n  --item-padding-x: var(--spacing-scale-2x);\n  --item-padding-y: var(--spacing-scale-base);\n  --item-padding: var(--item-padding-y) var(--item-padding-x);\n  --focus-offset: calc(var(--spacing-scale-half) * -1);\n  --item-display: block;\n  --item-align-items: center;\n}\n\n@mixin item-default {\n  border: 0;\n  color: var(--color);\n  display: var(--item-display);\n  font-weight: var(--item-font-weight);\n  padding: var(--item-padding);\n  text-align: left;\n  width: 100%;\n  // Regras para Grid interna\n  .row {\n    margin-left: calc(-1 * var(--spacing-scale-base));\n    margin-right: calc(-1 * var(--spacing-scale-base));\n\n    .col,\n    [class*=\"col-\"] {\n      padding-left: v(spacing-scale-base);\n      padding-right: v(spacing-scale-base);\n    }\n  }\n  // Fix para floats internos\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n\n// TODO: migrar customização do Select para o mixin abaixo\n@mixin item-checkbox {\n  &[data-toggle=\"selection\"] {\n    @include hover(\"color\");\n  }\n  .#{$prefix}checkbox,\n  .#{$prefix}radio {\n    margin-bottom: calc(var(--item-padding-y) * -1);\n    margin-left: calc(var(--item-padding-x) * -1);\n    margin-right: calc(var(--item-padding-x) * -1);\n    margin-top: calc(var(--item-padding-y) * -1);\n\n    input {\n      + label {\n        padding-bottom: var(--item-padding-y);\n        padding-top: var(--item-padding-y);\n        top: 1px;\n        width: 100%;\n\n        &::before {\n          left: var(--item-padding-x);\n          top: calc(var(--item-padding-y) - 1px);\n        }\n\n        &:empty {\n          left: 0;\n          top: 1px;\n        }\n      }\n\n      &:hover:not(:disabled) {\n        + label::before {\n          background-image: none;\n        }\n      }\n    }\n  }\n  .#{$prefix}checkbox {\n    input {\n      + label {\n        min-height: calc(var(--checkbox-size) + var(--item-padding-y) * 2);\n\n        &:not(:empty) {\n          padding-left: calc(\n            var(--checkbox-padding) + var(--checkbox-size) +\n              var(--item-padding-x)\n          );\n        }\n\n        &::after {\n          left: calc(var(--item-padding-x) + 8px);\n          top: calc(var(--item-padding-y) + 4px);\n        }\n\n        &:empty {\n          min-height: var(--checkbox-size);\n\n          &::after {\n            left: 8px;\n            top: 4px;\n          }\n        }\n      }\n    }\n  }\n  .#{$prefix}radio {\n    input {\n      + label {\n        min-height: calc(var(--radio-size) + var(--item-padding-y) * 2);\n        padding-left: calc(\n          var(--radio-padding) + var(--radio-size) + var(--item-padding-x)\n        );\n\n        &::after {\n          left: calc(var(--item-padding-x) + var(--radio-bullet-position));\n          top: calc(var(--item-padding-y) + var(--radio-bullet-position) - 1px);\n        }\n\n        &:empty {\n          min-height: var(--radio-size);\n\n          &::after {\n            left: var(--radio-bullet-position);\n            top: var(--radio-bullet-position);\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin item-colors {\n  @each $key in map-keys($br-colors) {\n    &.#{$key} {\n      @include colorize($key);\n    }\n  }\n}\n\n@mixin item-states {\n  // Selecionado\n  &.selected {\n    @include dark-mode;\n    background-color: var(--selected);\n  }\n  // Ativo\n  &.active {\n    @include dark-mode;\n    background-color: var(--active);\n    color: var(--color);\n  }\n  // Dark-mode\n  &.inverted,\n  &.dark-mode {\n    @include dark-mode;\n    &.active {\n      @include light-mode;\n      --interactive-rgb: var(--active-rgb);\n      background-color: var(--background-light);\n      color: var(--active);\n    }\n  }\n}\n\n// TODO: Este mixin ainda é necessário?\n@mixin item-toggle {\n  &[data-toggle] {\n    @include hover(\"color\");\n    .content {\n      i {\n        color: var(--interactive);\n      }\n    }\n  }\n}\n\n@mixin item-center {\n\n  --item-display: flex;\n  --item-display-active-background: transparent;\n  align-items: var(--item-align-items);\n  .content {\n    flex: 1;\n  }\n  @include hover;\n}\n\n@mixin item-brackground-transparent {\n  &.active {\n    background: transparent;\n  }\n}\n","/// Aplica hover: feedback ao colocar o cursor no elemento\n/// @param {String} $color [\"interactive\"] - Cor do hover **(Opcional)**\n/// @example scss - Uso prático\n///  a {\n///    @include hover;\n///  }\n@mixin hover($color: \"interactive\") {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(\n        rgba(var(--#{$color}-rgb), var(--hover)),\n        rgba(var(--#{$color}-rgb), var(--hover))\n      );\n    }\n  }\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Dark mode\n@mixin dark-mode {\n  --color: var(--color-dark);\n  --color-rgb: var(--color-dark-rgb);\n  --text-color: var(--color);\n  --interactive: var(--interactive-dark);\n  --interactive-rgb: var(--interactive-dark-rgb);\n  --visited: var(--visited-dark);\n  --hover: var(--hover-dark);\n  --pressed: var(--pressed-dark);\n  --focus-color: var(--focus-color-dark);\n  --focus: var(--focus-color);\n}\n@mixin light-mode {\n  --color: var(--color-light);\n  --color-rgb: var(--color-light-rgb);\n  --text-color: var(--color);\n  --interactive: var(--interactive-light);\n  --interactive-rgb: var(--interactive-light-rgb);\n  --visited: var(--visited-light);\n  --hover: var(--hover-light);\n  --pressed: var(--pressed-light);\n  --focus-color: var(--focus-color-light);\n  --focus: var(--focus-color);\n}\n","/// Aplica foco: feedback ao navegar por teclado no elemento\n/// @example scss - Uso prático\n///  a {\n///    @include focus;\n///  }\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n/// Aplica foco tênue\n/// @example scss - Uso prático\n///  input {\n///    &:focus,\n///    &:focus-visible,\n///    &.focus-visible {\n///      @include focus-soft;\n///    }\n///  }\n@mixin focus-soft {\n  border-color: var(--focus) !important;\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus);\n  outline: none;\n}\n"],"names":[],"sourceRoot":""}