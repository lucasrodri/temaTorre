{"version":3,"file":"components/textarea/textarea.min.js","mappings":"CAAA,SAAUA,EAAiCC,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,QAAS,GAAIH,GACM,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,IARlB,CASGK,MAAM,WACT,M,2BCVA,MAAMC,EACJC,YAAYC,EAAMC,GAChBC,KAAKF,KAAOA,EACZE,KAAKD,UAAYA,EACjBC,KAAKC,eACLD,KAAKE,YAGPD,eACED,KAAKG,MAAQH,KAAKD,UAAUK,cAAc,UAC1CJ,KAAKK,QAAUL,KAAKD,UAAUK,cAAc,YACK,OAA7CJ,KAAKD,UAAUK,cAAc,cAC/BJ,KAAKM,QAAUN,KAAKD,UACjBK,cAAc,YACdG,aAAa,cAGlBP,KAAKQ,WAAaR,KAAKD,UAAUK,cAAc,eAC/CJ,KAAKS,aAAeT,KAAKD,UAAUK,cAAc,YAGnDF,YACEF,KAAKD,UAAUW,iBAAiB,SAAUC,IACxC,MAAMC,EAAiBZ,KAAKD,UAAUK,cAAc,YAAYS,WAC5DD,GAAkBZ,KAAKM,UAAYN,KAAKQ,aAC1CR,KAAKG,MAAMW,UAAY,GACvBd,KAAKS,aAAaK,UAAY,kBAC5Bd,KAAKM,QAAUM,yBAIdZ,KAAKQ,WAQRR,KAAKQ,WAAWM,UAAY,WAAWF,kCAPhB,IAAnBA,GAAiD,KAAzBZ,KAAKG,MAAMW,YACrCd,KAAKG,MAAMW,UAAY,4BAA4Bd,KAAKM,8BACxDN,KAAKS,aAAaK,UAAY,QAWxC,MAAe,M","sources":["webpack://dsgov/webpack/universalModuleDefinition","webpack://dsgov/./src/components/textarea/textarea.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dsgov\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dsgov\"] = factory();\n\telse\n\t\troot[\"dsgov\"] = factory();\n})(self, function() {\nreturn ","class BRTextArea {\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._setBehavior()\n    this._setKeyup()\n  }\n\n  _setBehavior() {\n    this.limit = this.component.querySelector('.limit')\n    this.current = this.component.querySelector('.current')\n    if (this.component.querySelector('textarea') !== null) {\n      this.maximum = this.component\n        .querySelector('textarea')\n        .getAttribute('maxlength')\n    }\n\n    this.characters = this.component.querySelector('.characters')\n    this.currentValue = this.component.querySelector('.current')\n  }\n\n  _setKeyup() {\n    this.component.addEventListener('keyup', (event) => {\n      const characterCount = this.component.querySelector('textarea').textLength\n      if (characterCount <= this.maximum && !this.characters) {\n        this.limit.innerHTML = ''\n        this.currentValue.innerHTML = `Restam <strong>${\n          this.maximum - characterCount\n        }</strong> caracteres`\n      }\n      // Com limite de caracteres\n      if (!this.characters) {\n        if (characterCount === 0 && this.limit.innerHTML === '') {\n          this.limit.innerHTML = `Limite m√°ximo de <strong>${this.maximum}</strong> caracteres`\n          this.currentValue.innerHTML = ''\n        }\n      }\n      // Sem limite de caracteres\n      else {\n        this.characters.innerHTML = `<strong>${characterCount}</strong> caracteres digitados`\n      }\n    })\n  }\n}\n\nexport default BRTextArea\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRTextArea","constructor","name","component","this","_setBehavior","_setKeyup","limit","querySelector","current","maximum","getAttribute","characters","currentValue","addEventListener","event","characterCount","textLength","innerHTML"],"sourceRoot":""}