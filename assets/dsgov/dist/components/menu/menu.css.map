{"version":3,"file":"components/menu/menu.css","mappings":"AAKA;ECUE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA2FA;EA8EA;ADpLF;ACqBE;EACE;ADnBJ;ACsBE;EACE;EACA;EACA;EACA;EACA;ADpBJ;ACuBE;EACE;EACA;EAEA;EACA;EACA;ADtBJ;AC2BI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;ADzBN;AC4BI;EACE;EACA;EACA;EACA;AD1BN;AC6BI;EACE;AD3BN;ACsCE;EACE;EACA;EACA;EACA;ADpCJ;ACsCI;EACE;EACA;EACA;EACA;EACA;ADpCN;ACsCM;EACE;ADpCR;ACsCQ;EACE;ADpCV;ACmDI;;EAEE;EACA;ADjDN;ACoDI;EACE;ADlDN;ACsDI;EACE;ADpDN;AC2DU;EACE;ADzDZ;AC+DQ;EACE;AD7DV;AC+DU;EACE;AD7DZ;ACqEM;EACE;ADnER;ACuEQ;EACE;ADrEV;AC4EM;EACE;EACA;AD1ER;AC+EU;EACE;AD7EZ;AEjGE;;;;;;;EDmLY;ADzEd;AC8EQ;EACE;AD5EV;AC6FI;EACE;EACA;EACA;EACA;EACA;EACA;AD3FN;AC8FI;EACE;EACA;EACA;AD5FN;AC8FM;EACE;AD5FR;AC8FQ;EACE;AD5FV;AG/HI;EACE;AHiIN;AC+FI;EACE;EACA;AD7FN;AC+FM;EACE;AD7FR;ACiGI;EACE;AD/FN;AC2GE;EACE;EACA;EACA;EACA;ADzGJ;AC2GI;EACE;ADzGN;AC4GI;EACE;AD1GN;AC8GE;EACE;AD5GJ;ACkHI;EACE;EACA;ADhHN;ACoHM;EACE;EACA;EACA;EACA;EACA;ADlHR;ACoHQ;EACE;ADlHV;ACqHQ;EACE;ADnHV;AE7KE;;;;;;;EDkSU;AD5GZ;ACiHM;EACE;AD/GR;ACkHM;EACE;ADhHR;ACyHM;EACE;ADvHR;ACsHM;EACE;ADpHR;ACmHM;EACE;ADjHR;AC0HI;;EAEE;ADxHN;AIlME;EHuTA;IAMI;EDvHJ;AACF;AIvME;EHoUI;IACE;ED1HN;EC6HI;IACE;ED3HN;EC8HI;IACE;ED5HN;ECiIM;IACE;ED/HR;AACF;ACuIE;EACE;ADrIJ;ACwIM;EACE;ADtIR;ACyIM;EACE;ADvIR;AC2II;EACE;EACA;EACA;EACA;EACA;ADzIN;AC0IM;EACE;ADxIR;AC4II;EACE;EACA;EACA;AD1IN;AC6II;EACE;AD3IN;AC8II;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AD5IN;AC8IM;EACE;EACA;AD5IR;AEtQE;;;;;;;EDoZQ;ADrIV;ACyIM;EACE;EACA;ADvIR;AI5QE;EH2ZI;IACE;ED5IN;EC+II;IACE;ED7IN;ECgJI;IACE;ED9IN;AACF;ACuJI;EACE;ADrJN;ACyJI;EI/bF;EACA;ALySF;AKvSE;EACE;ALySJ;AC2JM;EACE;EACA;EACA;ADzJR;AC2JQ;EACE;ADzJV;AG/SI;EACE;AHiTN,C","sources":["webpack://dsgov/./src/components/menu/_menu.scss","webpack://dsgov/./src/components/menu/_mixins.scss","webpack://dsgov/./src/partial/scss/mixins/_icons.scss","webpack://dsgov/./src/partial/scss/mixins/_hover.scss","webpack://dsgov/./src/partial/scss/mixins/_grid.scss","webpack://dsgov/./src/partial/scss/mixins/_states.scss"],"sourcesContent":["@use \"sass:math\";\n @import \"../../partial/scss/base\";\n \n@import \"mixins\";\n\n.#{$prefix}menu {\n  @include menu-configs;\n}\n","@mixin menu-configs {\n  @include menu-tokens;\n  @include menu-default;\n  @include menu-header;\n  @include menu-body;\n  @include menu-footer;\n  @include menu-items;\n  @include menu-side-menu;\n  @include menu-items-sizes;\n  @include menu-push;\n  @include menu-contextual;\n  @include menu-states;\n}\n\n@mixin menu-tokens {\n  --menu-zindex: var(--z-index-layer-3);\n  --menu-zindex-push: var(--z-index-layer-0);\n  --menu-scrim: var(--surface-overlay-scrim);\n  --menu-background: var(--bg-color);\n  --menu-background-submenu: var(--color-secondary-02);\n  --menu-logo: 40px;\n  --menu-title: var(--text-color);\n  --menu-divider: var(--color-secondary-04);\n  --menu-item-background: transparent;\n  --menu-item-color: var(--interactive);\n  --menu-item-padding: var(--menu-item-medium);\n  --menu-item-small: var(--spacing-scale-base);\n  --menu-item-medium: var(--spacing-scale-2x);\n  --menu-item-large: var(--spacing-scale-3x);\n}\n\n@mixin menu-default {\n  // A base é aplicado no seguinte html:\n  // <div class=\"br-menu\">\n  //   <div class=\"menu-trigger\">\n  //   <div class=\"menu-container\">\n  //     <div class=\"menu-scrim\">\n  //     <div class=\"menu-panel\">\n  .menu-container {\n    display: none;\n  }\n\n  .menu-scrim {\n    background: var(--menu-scrim);\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n  }\n\n  .menu-panel {\n    --focus-offset: calc(var(--spacing-scale-half) * -1);\n    background: var(--menu-background);\n    // box-shadow: var(--menu-shadow);\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n  }\n\n  // Menu ativo\n  &.active {\n    .menu-container {\n      bottom: 0;\n      display: flex;\n      left: 0;\n      position: fixed;\n      right: 0;\n      top: 0;\n      z-index: var(--menu-zindex);\n    }\n\n    .menu-panel {\n      flex: 1;\n      overflow: auto;\n      position: relative;\n      z-index: calc(var(--menu-zindex) + 1);\n    }\n\n    .menu-scrim {\n      position: absolute;\n    }\n  }\n}\n\n@mixin menu-header {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-header\">\n  //   <div class=\"menu-close\">\n  //   <div class=\"menu-title\">\n\n  .menu-header {\n    align-items: center;\n    border-bottom: 1px solid var(--menu-divider);\n    display: flex;\n    padding: var(--spacing-scale-base) var(--spacing-scale-base);\n\n    .menu-title {\n      align-items: center;\n      display: flex;\n      flex: 1;\n      font-size: var(--menu-title);\n      margin-left: var(--spacing-scale-base);\n\n      img {\n        max-height: var(--menu-logo);\n\n        + * {\n          margin-left: var(--spacing-scale-base);\n        }\n      }\n    }\n  }\n}\n\n@mixin menu-body {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-body\">\n  //   <div class=\"folder\">\n\n  /* stylelint-disable no-descending-specificity */\n  .menu-body {\n    // Resetar estilos\n    ul,\n    li {\n      margin: 0;\n      padding: 0;\n    }\n\n    ul {\n      list-style: none;\n    }\n\n    // Aplica separador nos itens de primeiro nível\n    > .divider {\n      border-bottom: 1px solid var(--menu-divider);\n    }\n\n    .menu-folder {\n      // Aplica separador entre pastas\n      > ul {\n        > li:last-child {\n          > .menu-item {\n            border-bottom: 1px solid var(--menu-divider);\n          }\n        }\n      }\n      // Cor de fundo para nível 2\n      > .menu-item {\n        + ul {\n          background: var(--menu-background-submenu);\n\n          .menu-item {\n            padding-left: var(--spacing-scale-5x);\n          }\n        }\n      }\n    }\n\n    // Aplica separador no menu dropdown de primeiro nível\n    .drop-menu {\n      > .menu-item {\n        border-bottom: 1px solid var(--menu-divider);\n      }\n\n      &.active {\n        > .menu-item {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    // Estilo padrão para menu dropdown e side menu\n    .drop-menu {\n      > ul {\n        background: var(--menu-background-submenu);\n        display: none;\n      }\n\n      &.active {\n        > .menu-item {\n          &:not(:hover) {\n            --menu-item-background: var(--menu-background);\n          }\n\n          .support {\n            @include icon {\n              transform: rotate(180deg);\n            }\n          }\n        }\n\n        > ul {\n          display: block;\n        }\n      }\n    }\n  }\n  /* stylelint-enable no-descending-specificity */\n}\n\n@mixin menu-footer {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-footer\">\n  //   <div class=\"menu-logos\">\n  //   <div class=\"menu-links\">\n  //   <div class=\"menu-social\">\n  //   <div class=\"menu-info\">\n\n  .menu-footer {\n    .menu-logos {\n      border-bottom: 1px solid var(--menu-divider);\n      column-gap: var(--spacing-scale-2x);\n      display: grid;\n      grid-template-columns: 1fr 1fr 1fr;\n      padding: var(--spacing-scale-base) var(--spacing-scale-5x);\n      row-gap: var(--spacing-scale-2x);\n    }\n\n    .menu-links {\n      --focus-offset: var(--spacing-scale-half);\n      border-bottom: 1px solid var(--menu-divider);\n      padding: var(--spacing-scale-2x) var(--spacing-scale-5x);\n\n      a {\n        display: block;\n\n        &:not(:last-child) {\n          margin-bottom: var(--spacing-scale-2x);\n        }\n        @include hover;\n      }\n    }\n\n    .menu-social {\n      border-bottom: 1px solid var(--menu-divider);\n      padding: var(--spacing-scale-base) var(--spacing-scale-5x);\n\n      .sharegroup {\n        display: flex;\n      }\n    }\n\n    .menu-info {\n      padding: var(--spacing-scale-2x);\n    }\n  }\n}\n\n@mixin menu-items {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-item\">\n  //   <div class=\"icon\">\n  //   <div class=\"content\">\n  //   <div class=\"support\">\n\n  .menu-item {\n    --focus-offset: calc(var(--spacing-scale-half) * -1);\n    background: var(--menu-item-background);\n    display: flex;\n    padding: var(--menu-item-padding) var(--spacing-scale-2x);\n\n    .icon {\n      margin-right: var(--spacing-scale-2x);\n    }\n\n    .content {\n      flex: 1;\n    }\n  }\n\n  a.menu-item {\n    color: var(--menu-item-color);\n  }\n}\n\n@mixin menu-side-menu {\n  .side-menu {\n    > ul {\n      background: var(--menu-background-submenu);\n      display: none;\n    }\n\n    &.active {\n      > .menu-item {\n        --interactive-rgb: var(--rgb-primary-darken-01);\n        --menu-item-color: var(--active);\n        --menu-item-background: var(--menu-background);\n        flex-direction: row-reverse;\n        font-weight: var(--font-weight-semi-bold);\n\n        .icon {\n          margin-right: 0;\n        }\n\n        .support {\n          margin-right: var(--spacing-scale-2x);\n          @include icon {\n            transform: rotate(180deg);\n          }\n        }\n      }\n\n      > ul {\n        display: block;\n      }\n\n      .menu-item {\n        padding-left: var(--spacing-scale-2x) !important;\n      }\n    }\n  }\n}\n\n@mixin menu-items-sizes {\n  @each $size in \"small\", \"medium\", \"large\" {\n    &.#{$size} {\n      .menu-item {\n        --menu-item-padding: var(--menu-item-#{$size});\n      }\n    }\n  }\n}\n\n@mixin menu-push {\n  // Mobile First\n  &.push {\n    .menu-trigger,\n    .menu-scrim {\n      display: none;\n    }\n    @include media-breakpoint-up(sm) {\n      --menu-zindex: var(--menu-zindex-push);\n    }\n  }\n\n  // Tablet\n  @include media-breakpoint-up(sm) {\n    &.push {\n      .menu-header {\n        display: none;\n      }\n\n      .menu-panel {\n        height: auto;\n      }\n\n      .menu-scrim {\n        display: none;\n      }\n\n      // Menu ativo\n      &.active {\n        .menu-container {\n          position: static;\n        }\n      }\n    }\n  }\n}\n\n@mixin menu-contextual {\n  // Mobile First\n  &.contextual {\n    overflow: auto;\n\n    .menu-body .menu-folder {\n      > .menu-item + ul .menu-item {\n        padding-left: var(--spacing-scale-2x);\n      }\n\n      > ul > li:last-child > .menu-item {\n        border-bottom: 0;\n      }\n    }\n\n    .menu-trigger {\n      bottom: 0;\n      left: 0;\n      position: fixed;\n      right: 0;\n      z-index: calc(var(--menu-zindex) - 1);\n      .#{$prefix}button {\n        --button-radius: 0;\n      }\n    }\n\n    .menu-container {\n      display: none;\n      flex-direction: column-reverse;\n      position: static;\n    }\n\n    .menu-panel {\n      height: auto;\n    }\n\n    &.active {\n      bottom: 0;\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      justify-content: flex-end;\n      left: 0;\n      position: fixed;\n      right: 0;\n      z-index: var(--menu-zindex);\n\n      .menu-trigger {\n        position: relative;\n        z-index: calc(var(--menu-zindex) + 1);\n        @include icon {\n          transform: rotate(180deg);\n        }\n      }\n\n      .menu-container {\n        display: flex;\n        overflow: auto;\n      }\n    }\n  }\n\n  // Tablet\n  @include media-breakpoint-up(md) {\n    &.contextual {\n      .menu-trigger {\n        display: none;\n      }\n\n      .menu-scrim {\n        position: static;\n      }\n\n      .menu-container {\n        display: block;\n      }\n    }\n  }\n}\n\n@mixin menu-states {\n  // Aplicáveis para item texto e link\n  .menu-item {\n    // Escondido\n    &[hidden] {\n      display: none;\n    }\n\n    // Desativado\n    &:disabled {\n      @include disabled;\n    }\n  }\n\n  // Aplicável somente para links\n  a.menu-item {\n    &:not(:disabled) {\n      // Ativo\n      &.active {\n        --interactive-rgb: var(--rgb-secondary-01);\n        --menu-item-background: var(--active);\n        --menu-item-color: var(--color-secondary-01);\n\n        &:focus {\n          outline-color: var(--color-support-10);\n        }\n      }\n\n      // Hover\n      @include hover;\n    }\n  }\n}\n","@mixin icon-size($value) {\n  @include icon {\n    --icon-size: #{$value};\n  }\n}\n\n@mixin icon {\n  .svg-inline--fa,\n  .fa,\n  .fab,\n  .fad,\n  .fal,\n  .far,\n  .fas {\n    @content;\n  }\n}\n","/// Aplica hover: feedback ao colocar o cursor no elemento\n/// @param {String} $color [\"interactive\"] - Cor do hover **(Opcional)**\n/// @example scss - Uso prático\n///  a {\n///    @include hover;\n///  }\n@mixin hover($color: \"interactive\") {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(\n        rgba(var(--#{$color}-rgb), var(--hover)),\n        rgba(var(--#{$color}-rgb), var(--hover))\n      );\n    }\n  }\n}\n","// Dependência para calcular divisão\n@use \"sass:math\";\n\n/// Aplica os estilos **a partir** do breakpoint informado\n/// @group 02\n/// @param {String} $breakpoint - **Usar**: xs, sm, md, lg ou xl\n/// @example scss - Aplicar estilos em **lg** e **xl**\n///  .#{$prefix}cookiebar {\n///    @include media-breakpoint-up(lg) {\n///      ...\n///    }\n///  }\n@mixin media-breakpoint-up($breakpoint) {\n  $size: map-get($breakpoints, $breakpoint);\n  @media (min-width: $size) {\n    @content;\n  }\n}\n\n/// Aplica os estilos **até** o breakpoint informado\n/// @group 02\n/// @param {String} $breakpoint - **Usar**: xs, sm, md, lg ou xl\n/// @example scss - Aplicar estilos em **xs**, **sm** e **md**\n///  .#{$prefix}cookiebar {\n///    @include media-breakpoint-down(md) {\n///      ...\n///    }\n///  }\n@mixin media-breakpoint-down($breakpoint) {\n  $value: map-get($breakpoints, next-breakpoint($breakpoint)) - 1px;\n  @media (max-width: $value) {\n    @content;\n  }\n}\n\n/// Cria containers e linhas da Grid\n/// @group 03\n/// @param {String} $breakpoint - **Usar**: xs, sm, md, lg ou xl\n/// @example scss - Uso prático\n///  @include make-grid(lg);\n@mixin make-grid($breakpoint) {\n  $breakpoint-name: map-get($breakpoints-name, $breakpoint);\n  $breakpoint-width: map-get($breakpoints, $breakpoint);\n  @media (min-width: $breakpoint-width) {\n    .container,\n    .container-sm,\n    .container-md,\n    .container-lg,\n    .container-xl,\n    .container-fluid {\n      --grid-margin: var(--grid-#{$breakpoint-name}-margin);\n    }\n\n    .row {\n      --grid-gutter: var(--grid-#{$breakpoint-name}-gutter);\n    }\n    @if $breakpoint == \"sm\" {\n      .container,\n      .container-sm {\n        --grid-maxwidth: calc(\n          var(--grid-breakpoint-#{$breakpoint}) -\n            var(--grid-#{$breakpoint-name}-margin)\n        );\n      }\n    }\n    @if $breakpoint == \"md\" {\n      .container,\n      .container-sm,\n      .container-md {\n        --grid-maxwidth: calc(\n          var(--grid-breakpoint-#{$breakpoint}) -\n            var(--grid-#{$breakpoint-name}-margin)\n        );\n      }\n    }\n    @if $breakpoint == \"lg\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg {\n        --grid-maxwidth: calc(\n          var(--grid-breakpoint-#{$breakpoint}) -\n            var(--grid-#{$breakpoint-name}-margin)\n        );\n      }\n    }\n    @if $breakpoint == \"xl\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg,\n      .container-xl {\n        --grid-maxwidth: calc(\n          var(--grid-breakpoint-#{$breakpoint}) -\n            var(--grid-#{$breakpoint-name}-margin)\n        );\n      }\n    }\n    @include make-columns($grid-desktop-columns, $breakpoint);\n  }\n}\n\n/// Cria as colunas da Grid.\n/// @group 03\n/// @param {Number} $columns - **Usar**: 4, 8 ou 12\n/// @param {String} $breakpoint [null] - **Usar**: xs, sm, md, lg ou xl **(Opcional)**\n/// @example scss - Criar classes até 4 colunas\n///  @include make-columns(4);\n/// @example scss - Criar classes até 8 colunas para breakpoint **sm**\n///  @include make-columns(8, \"sm\");\n@mixin make-columns($columns, $breakpoint: null) {\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")} {\n    flex: 1 0 0%;\n    min-width: math.div(1, $columns) * 100%;\n  }\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  @for $i from 1 through $columns {\n    .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-#{$i} {\n      flex-basis: math.div($i, $columns) * 100%;\n      max-width: math.div($i, $columns) * 100%;\n    }\n  }\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Dark mode\n@mixin dark-mode {\n  --color: var(--color-dark);\n  --color-rgb: var(--color-dark-rgb);\n  --text-color: var(--color);\n  --interactive: var(--interactive-dark);\n  --interactive-rgb: var(--interactive-dark-rgb);\n  --visited: var(--visited-dark);\n  --hover: var(--hover-dark);\n  --pressed: var(--pressed-dark);\n  --focus-color: var(--focus-color-dark);\n  --focus: var(--focus-color);\n}\n@mixin light-mode {\n  --color: var(--color-light);\n  --color-rgb: var(--color-light-rgb);\n  --text-color: var(--color);\n  --interactive: var(--interactive-light);\n  --interactive-rgb: var(--interactive-light-rgb);\n  --visited: var(--visited-light);\n  --hover: var(--hover-light);\n  --pressed: var(--pressed-light);\n  --focus-color: var(--focus-color-light);\n  --focus: var(--focus-color);\n}\n"],"names":[],"sourceRoot":""}