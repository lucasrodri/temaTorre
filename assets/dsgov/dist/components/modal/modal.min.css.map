{"version":3,"file":"components/modal/modal.min.css","mappings":"AAKA,UCCE,uCACA,wCACA,+CACA,wCAIA,+BACA,4BDPF,CCQE,iBACE,uCACA,iBDNJ,CCQI,wBACE,kBACA,QACA,sCDNN,CCUE,gBACE,uCACA,oCACA,kBACA,gDACA,eDRJ,CCWE,eACE,kCDTJ,CCYE,iBACE,aACA,cDVJ,CCcE,mBACE,mBACA,eDZJ,CCeE,iBACE,SACA,4EAEA,sCACA,aACA,sCACA,6CACA,8CACA,cACA,gCACA,YACA,UDdJ,CE9CE,oCACE,iCACA,+BFgDJ,CE7CE,0CACE,yBF+CJ,CE5CE,0CACE,yBF8CJ,CCQI,wBACE,YDNN,CCUM,gDACE,oCDRR,CGjCE,yBFiDE,iBACE,4BACA,4BDbJ,CCiBI,wBACE,KDfN,CACF,CG1DE,yBHTF,UCuFI,UDhBF,CCkBE,oBACE,eDhBJ,CCmBE,mBACE,eDjBJ,CCoBE,oBACE,eDlBJ,CCqBE,uCAEE,eDpBJ,CACF","sources":["webpack://dsgov/./src/components/modal/_modal.scss","webpack://dsgov/./src/components/modal/_mixins.scss","webpack://dsgov/./src/partial/scss/mixins/_scrollbar.scss","webpack://dsgov/./src/partial/scss/mixins/_grid.scss"],"sourcesContent":["@use \"sass:math\";\n @import \"../../partial/scss/base\";\n \n@import \"mixins\";\n\n.#{$prefix}modal {\n  @include modal-configs;\n}\n","@mixin modal-configs {\n  @include modal-token;\n  @include modal-default;\n  @include modal-responsive;\n}\n@mixin modal-token {\n  --modal-z-index: var(--z-index-layer-4);\n  --modal-shadow: var(--surface-shadow-sm);\n  --modal-margin-bottom: var(--spacing-scale-3xh);\n  --modal-padding: var(--spacing-scale-2x);\n}\n\n@mixin modal-default {\n  box-shadow: var(--modal-shadow);\n  z-index: var(--modal-z-index);\n  &-header {\n    margin-bottom: v(spacing-scale-3xh);\n    position: relative;\n\n    .close {\n      position: absolute;\n      right: 0;\n      top: calc(#{v(spacing-scale-half)} * -1);\n    }\n  }\n\n  &-title {\n    font-size: var(--font-size-scale-up-01);\n    font-weight: var(--font-weight-bold);\n    margin: 0 40px 0 0;\n    max-height: calc(var(--font-size-scale-up-01) * 3);\n    overflow: hidden;\n  }\n\n  &-body {\n    margin: 0 0 v(spacing-scale-5x);\n  }\n\n  &-footer {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  //  Div sombreada e com scroll se necessário para modal de termo de aceite\n  .#{$prefix}card {\n    --card-shadow: none;\n    margin-bottom: 0;\n  }\n\n  .terms {\n    border: 0;\n    box-shadow: var(--surface-shadow-sm-inset),\n      var(--surface-shadow-sm-inset-up);\n    font-size: v(font-size-scale-base);\n    height: 216px;\n    margin-bottom: var(--spacing-scale-2x);\n    margin-left: calc(#{v(spacing-scale-2x)} * -1);\n    margin-right: calc(#{v(spacing-scale-2x)} * -1);\n    overflow: auto;\n    padding: var(--spacing-scale-2x);\n    resize: none;\n    width: auto;\n\n    @include scrollbar;\n\n    &:active {\n      outline: none;\n    }\n\n    &:hover {\n      &::-webkit-scrollbar-thumb {\n        background: v(color-secondary-07);\n      }\n    }\n  }\n}\n\n@mixin modal-responsive {\n  @include media-breakpoint-down(sm) {\n    .terms {\n      margin-left: unset !important;\n      margin-right: unset !important;\n    }\n\n    &-header {\n      .close {\n        top: 0;\n      }\n    }\n  }\n\n  @include media-breakpoint-up(sm) {\n    width: auto;\n\n    &.is-xsmall {\n      max-width: 220px;\n    }\n\n    &.is-small {\n      max-width: 300px;\n    }\n\n    &.is-medium {\n      max-width: 500px;\n    }\n\n    &.is-large,\n    &.is-scroll {\n      max-width: 640px;\n    }\n  }\n}\n","@mixin scrollbar {\n  &::-webkit-scrollbar {\n    height: var(--spacing-scale-base);\n    width: var(--spacing-scale-base);\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--gray-10);\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: var(--gray-30);\n  }\n}\n","// Dependência para calcular divisão\n@use \"sass:math\";\n\n/// Aplica os estilos **a partir** do breakpoint informado\n/// @group 02\n/// @param {String} $breakpoint - **Usar**: xs, sm, md, lg ou xl\n/// @example scss - Aplicar estilos em **lg** e **xl**\n///  .#{$prefix}cookiebar {\n///    @include media-breakpoint-up(lg) {\n///      ...\n///    }\n///  }\n@mixin media-breakpoint-up($breakpoint) {\n  $size: map-get($breakpoints, $breakpoint);\n  @media (min-width: $size) {\n    @content;\n  }\n}\n\n/// Aplica os estilos **até** o breakpoint informado\n/// @group 02\n/// @param {String} $breakpoint - **Usar**: xs, sm, md, lg ou xl\n/// @example scss - Aplicar estilos em **xs**, **sm** e **md**\n///  .#{$prefix}cookiebar {\n///    @include media-breakpoint-down(md) {\n///      ...\n///    }\n///  }\n@mixin media-breakpoint-down($breakpoint) {\n  $value: map-get($breakpoints, next-breakpoint($breakpoint)) - 1px;\n  @media (max-width: $value) {\n    @content;\n  }\n}\n\n/// Cria containers e linhas da Grid\n/// @group 03\n/// @param {String} $breakpoint - **Usar**: xs, sm, md, lg ou xl\n/// @example scss - Uso prático\n///  @include make-grid(lg);\n@mixin make-grid($breakpoint) {\n  $breakpoint-name: map-get($breakpoints-name, $breakpoint);\n  $breakpoint-width: map-get($breakpoints, $breakpoint);\n  @media (min-width: $breakpoint-width) {\n    .container,\n    .container-sm,\n    .container-md,\n    .container-lg,\n    .container-xl,\n    .container-fluid {\n      --grid-margin: var(--grid-#{$breakpoint-name}-margin);\n    }\n\n    .row {\n      --grid-gutter: var(--grid-#{$breakpoint-name}-gutter);\n    }\n    @if $breakpoint == \"sm\" {\n      .container,\n      .container-sm {\n        --grid-maxwidth: calc(\n          var(--grid-breakpoint-#{$breakpoint}) -\n            var(--grid-#{$breakpoint-name}-margin)\n        );\n      }\n    }\n    @if $breakpoint == \"md\" {\n      .container,\n      .container-sm,\n      .container-md {\n        --grid-maxwidth: calc(\n          var(--grid-breakpoint-#{$breakpoint}) -\n            var(--grid-#{$breakpoint-name}-margin)\n        );\n      }\n    }\n    @if $breakpoint == \"lg\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg {\n        --grid-maxwidth: calc(\n          var(--grid-breakpoint-#{$breakpoint}) -\n            var(--grid-#{$breakpoint-name}-margin)\n        );\n      }\n    }\n    @if $breakpoint == \"xl\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg,\n      .container-xl {\n        --grid-maxwidth: calc(\n          var(--grid-breakpoint-#{$breakpoint}) -\n            var(--grid-#{$breakpoint-name}-margin)\n        );\n      }\n    }\n    @include make-columns($grid-desktop-columns, $breakpoint);\n  }\n}\n\n/// Cria as colunas da Grid.\n/// @group 03\n/// @param {Number} $columns - **Usar**: 4, 8 ou 12\n/// @param {String} $breakpoint [null] - **Usar**: xs, sm, md, lg ou xl **(Opcional)**\n/// @example scss - Criar classes até 4 colunas\n///  @include make-columns(4);\n/// @example scss - Criar classes até 8 colunas para breakpoint **sm**\n///  @include make-columns(8, \"sm\");\n@mixin make-columns($columns, $breakpoint: null) {\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")} {\n    flex: 1 0 0%;\n    min-width: math.div(1, $columns) * 100%;\n  }\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  @for $i from 1 through $columns {\n    .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-#{$i} {\n      flex-basis: math.div($i, $columns) * 100%;\n      max-width: math.div($i, $columns) * 100%;\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}